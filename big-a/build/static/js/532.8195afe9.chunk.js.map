{"version":3,"file":"static/js/532.8195afe9.chunk.js","mappings":"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","sources":["views/theme/typography/Typography.js","../node_modules/@coreui/react/src/components/card/CCard.tsx","../node_modules/@coreui/react/src/components/card/CCardBody.tsx","../node_modules/@coreui/react/src/components/card/CCardHeader.tsx"],"sourcesContent":["import React from 'react'\nimport { CCard, CCardHeader, CCardBody } from '@coreui/react'\nimport { DocsLink } from '../../../components'\n\nconst Typography = () => {\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader>\n          Headings\n          <DocsLink href=\"https://coreui.io/docs/content/typography/\" />\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            Documentation and examples for Bootstrap typography, including global settings,\n            headings, body text, lists, and more.\n          </p>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Heading</th>\n                <th>Example</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h1&gt;&lt;/h1&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h1\">h1. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h2&gt;&lt;/h2&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h2\">h2. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h3&gt;&lt;/h3&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h3\">h3. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h4&gt;&lt;/h4&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h4\">h4. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h5&gt;&lt;/h5&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h5\">h5. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h6&gt;&lt;/h6&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h6\">h6. Bootstrap heading</span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Headings</CCardHeader>\n        <CCardBody>\n          <p>\n            <code className=\"highlighter-rouge\">.h1</code> through\n            <code className=\"highlighter-rouge\">.h6</code>\n            classes are also available, for when you want to match the font styling of a heading but\n            cannot use the associated HTML element.\n          </p>\n          <div className=\"bd-example\">\n            <p className=\"h1\">h1. Bootstrap heading</p>\n            <p className=\"h2\">h2. Bootstrap heading</p>\n            <p className=\"h3\">h3. Bootstrap heading</p>\n            <p className=\"h4\">h4. Bootstrap heading</p>\n            <p className=\"h5\">h5. Bootstrap heading</p>\n            <p className=\"h6\">h6. Bootstrap heading</p>\n          </div>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <div className=\"card-header\">Display headings</div>\n        <div className=\"card-body\">\n          <p>\n            Traditional heading elements are designed to work best in the meat of your page content.\n            When you need a heading to stand out, consider using a <strong>display heading</strong>\n            —a larger, slightly more opinionated heading style.\n          </p>\n          <div className=\"bd-example bd-example-type\">\n            <table className=\"table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <span className=\"display-1\">Display 1</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-2\">Display 2</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-3\">Display 3</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-4\">Display 4</span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Inline text elements</CCardHeader>\n        <CCardBody>\n          <p>\n            Traditional heading elements are designed to work best in the meat of your page content.\n            When you need a heading to stand out, consider using a <strong>display heading</strong>\n            —a larger, slightly more opinionated heading style.\n          </p>\n          <div className=\"bd-example\">\n            <p>\n              You can use the mark tag to <mark>highlight</mark> text.\n            </p>\n            <p>\n              <del>This line of text is meant to be treated as deleted text.</del>\n            </p>\n            <p>\n              <s>This line of text is meant to be treated as no longer accurate.</s>\n            </p>\n            <p>\n              <ins>This line of text is meant to be treated as an addition to the document.</ins>\n            </p>\n            <p>\n              <u>This line of text will render as underlined</u>\n            </p>\n            <p>\n              <small>This line of text is meant to be treated as fine print.</small>\n            </p>\n            <p>\n              <strong>This line rendered as bold text.</strong>\n            </p>\n            <p>\n              <em>This line rendered as italicized text.</em>\n            </p>\n          </div>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Description list alignment</CCardHeader>\n        <CCardBody>\n          <p>\n            Align terms and descriptions horizontally by using our grid system’s predefined classes\n            (or semantic mixins). For longer terms, you can optionally add a{' '}\n            <code className=\"highlighter-rouge\">.text-truncate</code> class to truncate the text\n            with an ellipsis.\n          </p>\n          <div className=\"bd-example\">\n            <dl className=\"row\">\n              <dt className=\"col-sm-3\">Description lists</dt>\n              <dd className=\"col-sm-9\">A description list is perfect for defining terms.</dd>\n\n              <dt className=\"col-sm-3\">Euismod</dt>\n              <dd className=\"col-sm-9\">\n                <p>\n                  Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.\n                </p>\n                <p>Donec id elit non mi porta gravida at eget metus.</p>\n              </dd>\n\n              <dt className=\"col-sm-3\">Malesuada porta</dt>\n              <dd className=\"col-sm-9\">Etiam porta sem malesuada magna mollis euismod.</dd>\n\n              <dt className=\"col-sm-3 text-truncate\">Truncated term is truncated</dt>\n              <dd className=\"col-sm-9\">\n                Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut\n                fermentum massa justo sit amet risus.\n              </dd>\n\n              <dt className=\"col-sm-3\">Nesting</dt>\n              <dd className=\"col-sm-9\">\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Nested definition list</dt>\n                  <dd className=\"col-sm-8\">\n                    Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.\n                  </dd>\n                </dl>\n              </dd>\n            </dl>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Typography\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CCardProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Sets the text color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | 'primary-emphasis' | 'secondary-emphasis' | 'success-emphasis' | 'danger-emphasis' | 'warning-emphasis' | 'info-emphasis' | 'light-emphasis' | 'body' | 'body-emphasis' | 'body-secondary' | 'body-tertiary' | 'black' | 'black-50' | 'white' | 'white-50' | string\n   */\n  textColor?: string\n  /**\n   * Sets the component's color scheme to one of CoreUI's themed colors, ensuring the text color contrast adheres to the WCAG 4.5:1 contrast ratio standard for accessibility.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   * @since 5.0.0-rc.3\n   */\n  textBgColor?: Colors\n}\n\nexport const CCard = forwardRef<HTMLDivElement, CCardProps>(\n  ({ children, className, color, textBgColor, textColor, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'card',\n          {\n            [`bg-${color}`]: color,\n            [`text-${textColor}`]: textColor,\n            [`text-bg-${textBgColor}`]: textBgColor,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  textBgColor: colorPropType,\n  textColor: PropTypes.string,\n}\n\nCCard.displayName = 'CCard'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCardBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardBody = forwardRef<HTMLDivElement, CCardBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-body', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardBody.displayName = 'CCardBody'\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardHeader: PolymorphicRefForwardingComponent<'div', CCardHeaderProps> = forwardRef<\n  HTMLDivElement,\n  CCardHeaderProps\n>(({ children, as: Component = 'div', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-header', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardHeader.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardHeader.displayName = 'CCardHeader'\n"],"names":["Typography","_jsxs","_Fragment","children","CCard","className","CCardHeader","_jsx","DocsLink","href","CCardBody","forwardRef","_a","ref","color","textBgColor","textColor","rest","__rest","React","__assign","classNames","_b","concat","propTypes","PropTypes","colorPropType","displayName","as","Component"],"sourceRoot":""}