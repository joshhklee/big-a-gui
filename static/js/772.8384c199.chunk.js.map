{"version":3,"file":"static/js/772.8384c199.chunk.js","mappings":"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","sources":["views/dashboard/MainChart.js","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/icons/src/brand/cib-facebook.ts","../node_modules/@coreui/icons/src/brand/cib-linkedin.ts","../node_modules/@coreui/icons/src/brand/cib-twitter.ts","../node_modules/@coreui/icons/src/free/cil-arrow-bottom.ts","../node_modules/@coreui/icons/src/free/cil-arrow-top.ts","../node_modules/@coreui/icons/src/free/cil-calendar.ts","../node_modules/@coreui/icons/src/free/cil-cloud-download.ts","../node_modules/@coreui/icons/src/free/cil-options.ts","../node_modules/@coreui/react/src/components/button-group/CButtonGroup.tsx","../node_modules/@coreui/react/src/components/card/CCardFooter.tsx","../node_modules/@coreui/react/src/components/progress/CProgress.tsx","../node_modules/@coreui/react/src/components/progress/CProgressBar.tsx","../node_modules/@coreui/react/src/components/progress/CProgressStacked.tsx","../node_modules/@coreui/react/src/components/widgets/CWidgetStatsA.tsx","../node_modules/@coreui/react/src/components/widgets/CWidgetStatsD.tsx","../node_modules/@coreui/utils/src/getStyle.ts","../node_modules/classnames/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\n\nconst MainChart = () => {\n  const chartRef = useRef(null)\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (chartRef.current) {\n        setTimeout(() => {\n          chartRef.current.options.scales.x.grid.borderColor = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartRef.current.options.scales.x.grid.color = getStyle('--cui-border-color-translucent')\n          chartRef.current.options.scales.x.ticks.color = getStyle('--cui-body-color')\n          chartRef.current.options.scales.y.grid.borderColor = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartRef.current.options.scales.y.grid.color = getStyle('--cui-border-color-translucent')\n          chartRef.current.options.scales.y.ticks.color = getStyle('--cui-body-color')\n          chartRef.current.update()\n        })\n      }\n    })\n  }, [chartRef])\n\n  const random = () => Math.round(Math.random() * 100)\n\n  return (\n    <>\n      <CChartLine\n        ref={chartRef}\n        style={{ height: '300px', marginTop: '40px' }}\n        data={{\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          datasets: [\n            {\n              label: 'My First dataset',\n              backgroundColor: `rgba(${getStyle('--cui-info-rgb')}, .1)`,\n              borderColor: getStyle('--cui-info'),\n              pointHoverBackgroundColor: getStyle('--cui-info'),\n              borderWidth: 2,\n              data: [\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n              ],\n              fill: true,\n            },\n            {\n              label: 'My Second dataset',\n              backgroundColor: 'transparent',\n              borderColor: getStyle('--cui-success'),\n              pointHoverBackgroundColor: getStyle('--cui-success'),\n              borderWidth: 2,\n              data: [\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n              ],\n            },\n            {\n              label: 'My Third dataset',\n              backgroundColor: 'transparent',\n              borderColor: getStyle('--cui-danger'),\n              pointHoverBackgroundColor: getStyle('--cui-danger'),\n              borderWidth: 1,\n              borderDash: [8, 5],\n              data: [65, 65, 65, 65, 65, 65, 65],\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false,\n            },\n          },\n          scales: {\n            x: {\n              grid: {\n                color: getStyle('--cui-border-color-translucent'),\n                drawOnChartArea: false,\n              },\n              ticks: {\n                color: getStyle('--cui-body-color'),\n              },\n            },\n            y: {\n              beginAtZero: true,\n              border: {\n                color: getStyle('--cui-border-color-translucent'),\n              },\n              grid: {\n                color: getStyle('--cui-border-color-translucent'),\n              },\n              max: 250,\n              ticks: {\n                color: getStyle('--cui-body-color'),\n                maxTicksLimit: 5,\n                stepSize: Math.ceil(250 / 5),\n              },\n            },\n          },\n          elements: {\n            line: {\n              tension: 0.4,\n            },\n            point: {\n              radius: 0,\n              hitRadius: 10,\n              hoverRadius: 4,\n              hoverBorderWidth: 3,\n            },\n          },\n        }}\n      />\n    </>\n  )\n}\n\nexport default MainChart\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cilCloudDownload,\n} from '@coreui/icons'\n\nimport avatar1 from '../../assets/images/avatars/1.jpg'\nimport avatar2 from '../../assets/images/avatars/2.jpg'\nimport avatar3 from '../../assets/images/avatars/3.jpg'\nimport avatar4 from '../../assets/images/avatars/4.jpg'\nimport avatar5 from '../../assets/images/avatars/5.jpg'\nimport avatar6 from '../../assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport MainChart from './MainChart'\n\nconst Dashboard = () => {\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown className=\"mb-4\" />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-body-secondary\">January - July 2023</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <MainChart />\n        </CCardBody>\n        <CCardFooter>\n          <CRow\n            xs={{ cols: 1, gutter: 4 }}\n            sm={{ cols: 2 }}\n            lg={{ cols: 4 }}\n            xl={{ cols: 5 }}\n            className=\"mb-2 text-center\"\n          >\n            {progressExample.map((item, index, items) => (\n              <CCol\n                className={classNames({\n                  'd-none d-xl-block': index + 1 === items.length,\n                })}\n                key={index}\n              >\n                <div className=\"text-body-secondary\">{item.title}</div>\n                <div className=\"fw-semibold text-truncate\">\n                  {item.value} ({item.percent}%)\n                </div>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n      <WidgetsBrand className=\"mb-4\" withCharts />\n      <CRow>\n        <CCol xs>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = (props) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow className={props.className} xs={{ gutter: 4 }}>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          color=\"warning\"\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  className: PropTypes.string,\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React, { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = (props) => {\n  const widgetChartRef1 = useRef(null)\n  const widgetChartRef2 = useRef(null)\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (widgetChartRef1.current) {\n        setTimeout(() => {\n          widgetChartRef1.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-primary')\n          widgetChartRef1.current.update()\n        })\n      }\n\n      if (widgetChartRef2.current) {\n        setTimeout(() => {\n          widgetChartRef2.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-info')\n          widgetChartRef2.current.update()\n        })\n      }\n    })\n  }, [widgetChartRef1, widgetChartRef2])\n\n  return (\n    <CRow className={props.className} xs={{ gutter: 4 }}>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              ref={widgetChartRef1}\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              ref={widgetChartRef2}\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"warning\"\n          value={\n            <>\n              2.49%{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsDropdown.propTypes = {\n  className: PropTypes.string,\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsDropdown\n","export var cibFacebook = [\"32 32\", \"<path d='M32 16c0-8.839-7.167-16-16-16-8.839 0-16 7.161-16 16 0 7.984 5.849 14.604 13.5 15.803v-11.177h-4.063v-4.625h4.063v-3.527c0-4.009 2.385-6.223 6.041-6.223 1.751 0 3.584 0.312 3.584 0.312v3.937h-2.021c-1.984 0-2.604 1.235-2.604 2.5v3h4.437l-0.713 4.625h-3.724v11.177c7.645-1.199 13.5-7.819 13.5-15.803z'/>\"];\n","export var cibLinkedin = [\"32 32\", \"<path d='M27.26 27.271h-4.733v-7.427c0-1.771-0.037-4.047-2.475-4.047-2.468 0-2.844 1.921-2.844 3.916v7.557h-4.739v-15.271h4.552v2.083h0.061c0.636-1.203 2.183-2.468 4.491-2.468 4.801 0 5.692 3.161 5.692 7.271v8.385zM7.115 9.912c-1.527 0-2.751-1.235-2.751-2.756 0-1.516 1.229-2.749 2.751-2.749s2.755 1.233 2.755 2.749c0 1.521-1.233 2.756-2.755 2.756zM9.489 27.271h-4.749v-15.271h4.749zM29.636 0h-27.276c-1.303 0-2.36 1.031-2.36 2.307v27.387c0 1.276 1.057 2.307 2.36 2.307h27.271c1.301 0 2.369-1.031 2.369-2.307v-27.387c0-1.276-1.068-2.307-2.369-2.307z'/>\"];\n","export var cibTwitter = [\"32 32\", \"<path d='M31.937 6.093c-1.177 0.516-2.437 0.871-3.765 1.032 1.355-0.813 2.391-2.099 2.885-3.631-1.271 0.74-2.677 1.276-4.172 1.579-1.192-1.276-2.896-2.079-4.787-2.079-3.625 0-6.563 2.937-6.563 6.557 0 0.521 0.063 1.021 0.172 1.495-5.453-0.255-10.287-2.875-13.52-6.833-0.568 0.964-0.891 2.084-0.891 3.303 0 2.281 1.161 4.281 2.916 5.457-1.073-0.031-2.083-0.328-2.968-0.817v0.079c0 3.181 2.26 5.833 5.26 6.437-0.547 0.145-1.131 0.229-1.724 0.229-0.421 0-0.823-0.041-1.224-0.115 0.844 2.604 3.26 4.5 6.14 4.557-2.239 1.755-5.077 2.801-8.135 2.801-0.521 0-1.041-0.025-1.563-0.088 2.917 1.86 6.36 2.948 10.079 2.948 12.067 0 18.661-9.995 18.661-18.651 0-0.276 0-0.557-0.021-0.839 1.287-0.917 2.401-2.079 3.281-3.396z'/>\"];\n","export var cilArrowBottom = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='367.997 338.75 271.999 434.747 271.999 17.503 239.999 17.503 239.999 434.745 144.003 338.75 121.376 361.377 256 496 390.624 361.377 367.997 338.75' class='ci-primary'/>\"];\n","export var cilArrowTop = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625' class='ci-primary'/>\"];\n","export var cilCalendar = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M472,96H384V40H352V96H160V40H128V96H40a24.028,24.028,0,0,0-24,24V456a24.028,24.028,0,0,0,24,24H472a24.028,24.028,0,0,0,24-24V120A24.028,24.028,0,0,0,472,96Zm-8,352H48V128h80v40h32V128H352v40h32V128h80Z' class='ci-primary'/><rect width='32' height='32' x='112' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='112' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='112' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n","export var cilCloudDownload = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"];\n","export var cilOptions = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M256,144a64,64,0,1,0-64-64A64.072,64.072,0,0,0,256,144Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,256,48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,368a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,368Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,464Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z' class='ci-primary'/>\"];\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CButtonGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Create a set of buttons that appear vertically stacked rather than horizontally. Split button dropdowns are not supported here.\n   */\n  vertical?: boolean\n}\n\nexport const CButtonGroup = forwardRef<HTMLDivElement, CButtonGroupProps>(\n  ({ children, className, size, vertical, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          vertical ? 'btn-group-vertical' : 'btn-group',\n          { [`btn-group-${size}`]: size },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCButtonGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  vertical: PropTypes.bool,\n}\n\nCButtonGroup.displayName = 'CButtonGroup'\n","import PropTypes from 'prop-types'\nimport React, { forwardRef, HTMLAttributes } from 'react'\nimport classNames from 'classnames'\n\nexport interface CCardFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardFooter = forwardRef<HTMLDivElement, CCardFooterProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-footer', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardFooter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardFooter.displayName = 'CCardFooter'\n","import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CProgressStackedContext } from './CProgressStacked'\nimport { CProgressBar, CProgressBarProps } from './CProgressBar'\n\nexport interface CProgressProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'color'>,\n    CProgressBarProps {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the height of the component. If you set that value the inner `<CProgressBar>` will automatically resize accordingly.\n   */\n  height?: number\n  /**\n   * A string of all className you want applied to the <CProgressBar/> component.\n   *\n   * @since 4.9.0\n   */\n  progressBarClassName?: string\n  /**\n   * Makes progress bar thinner.\n   */\n  thin?: boolean\n  /**\n   * The percent to progress the ProgressBar (out of 100).\n   */\n  value?: number\n  /**\n   * Change the default color to white.\n   */\n  white?: boolean\n}\n\nexport const CProgress = forwardRef<HTMLDivElement, CProgressProps>(\n  ({ children, className, height, progressBarClassName, thin, value, white, ...rest }, ref) => {\n    const { stacked } = useContext(CProgressStackedContext)\n\n    return (\n      <div\n        className={classNames(\n          'progress',\n          {\n            'progress-thin': thin,\n            'progress-white': white,\n          },\n          className,\n        )}\n        {...(value !== undefined && {\n          role: 'progressbar',\n          'aria-valuenow': value,\n          'aria-valuemin': 0,\n          'aria-valuemax': 100,\n        })}\n        style={{\n          ...(height ? { height: `${height}px` } : {}),\n          ...(stacked ? { width: `${value}%` } : {}),\n        }}\n        ref={ref}\n      >\n        {React.Children.toArray(children).some(\n          // @ts-expect-error displayName is set in the CProgressBar component\n          (child) => child.type && child.type.displayName === 'CProgressBar',\n        ) ? (\n          React.Children.map(children, (child) => {\n            // @ts-expect-error displayName is set in the CProgressBar component\n            if (React.isValidElement(child) && child.type.displayName === 'CProgressBar') {\n              return React.cloneElement(child, {\n                ...(value && { value: value }),\n                ...rest,\n              })\n            }\n\n            return\n          })\n        ) : (\n          <CProgressBar\n            {...(progressBarClassName && { className: progressBarClassName })}\n            value={value}\n            {...rest}\n          >\n            {children}\n          </CProgressBar>\n        )}\n      </div>\n    )\n  },\n)\n\nCProgress.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  height: PropTypes.number,\n  progressBarClassName: PropTypes.string,\n  thin: PropTypes.bool,\n  value: PropTypes.number,\n  white: PropTypes.bool,\n}\n\nCProgress.displayName = 'CProgress'\n","import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CProgressStackedContext } from './CProgressStacked'\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CProgressBarProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Use to animate the stripes right to left via CSS3 animations.\n   */\n  animated?: boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * The percent to progress the ProgressBar.\n   */\n  value?: number\n  /**\n   * Set the progress bar variant to optional striped.\n   */\n  variant?: 'striped'\n}\n\nexport const CProgressBar = forwardRef<HTMLDivElement, CProgressBarProps>(\n  ({ children, animated, className, color, value = 0, variant, ...rest }, ref) => {\n    const { stacked } = useContext(CProgressStackedContext)\n\n    return (\n      <div\n        className={classNames(\n          'progress-bar',\n          {\n            [`bg-${color}`]: color,\n            [`progress-bar-${variant}`]: variant,\n            'progress-bar-animated': animated,\n          },\n          className,\n        )}\n        {...(!stacked && { style: { width: `${value}%` } })}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\nCProgressBar.propTypes = {\n  animated: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  value: PropTypes.number,\n  variant: PropTypes.oneOf(['striped']),\n}\n\nCProgressBar.displayName = 'CProgressBar'\n","import React, { createContext, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CProgressStackedProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport interface CProgressStackedContextProps {\n  stacked?: boolean\n}\n\nexport const CProgressStackedContext = createContext({} as CProgressStackedContextProps)\n\nexport const CProgressStacked = forwardRef<HTMLDivElement, CProgressStackedProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('progress-stacked', className)} ref={ref} {...rest}>\n        <CProgressStackedContext.Provider\n          value={{\n            stacked: true,\n          }}\n        >\n          {children}\n        </CProgressStackedContext.Provider>\n      </div>\n    )\n  },\n)\n\nCProgressStacked.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCProgressStacked.displayName = 'CProgressStacked'\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody } from '../card'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CWidgetStatsAProps extends Omit<HTMLAttributes<HTMLDivElement>, 'title'> {\n  /**\n   * Action node for your component.\n   */\n  action?: ReactNode\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Title node for your component.\n   */\n  title?: string | ReactNode\n  /**\n   * Value node for your component.\n   */\n  value?: string | number | ReactNode\n}\n\nexport const CWidgetStatsA = forwardRef<HTMLDivElement, CWidgetStatsAProps>(\n  ({ action, chart, className, color, title, value, ...rest }, ref) => {\n    return (\n      <CCard\n        className={classNames({ [`bg-${color}`]: color, 'text-white': color }, className)}\n        {...rest}\n        ref={ref}\n      >\n        <CCardBody className=\"pb-0 d-flex justify-content-between align-items-start\">\n          <div>\n            {value && <div className=\"fs-4 fw-semibold\">{value}</div>}\n            {title && <div>{title}</div>}\n          </div>\n          {action}\n        </CCardBody>\n        {chart}\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsA.propTypes = {\n  action: PropTypes.node,\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),\n}\n\nCWidgetStatsA.displayName = 'CWidgetStatsA'\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CCard, CCardBody, CCardHeader } from '../card'\nimport { CCol } from '../grid/CCol'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\ntype Value = {\n  title?: string | ReactNode\n  value?: number | string | ReactNode\n}\n\nexport interface CWidgetStatsDProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Chart node for your component.\n   */\n  chart?: string | ReactNode\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Icon node for your component.\n   */\n  icon?: string | ReactNode\n  /**\n   * Values and titles for your component.\n   */\n  values?: Value[]\n}\n\nexport const CWidgetStatsD = forwardRef<HTMLDivElement, CWidgetStatsDProps>(\n  ({ className, chart, color, icon, values, ...rest }, ref) => {\n    return (\n      <CCard className={className} {...rest} ref={ref}>\n        <CCardHeader\n          className={classNames(\n            'position-relative d-flex justify-content-center align-items-center',\n            {\n              [`bg-${color}`]: color,\n            },\n          )}\n        >\n          {icon}\n          {chart}\n        </CCardHeader>\n        <CCardBody className=\"row text-center\">\n          {values &&\n            values.map((value: Value, index: number) => {\n              return (\n                <React.Fragment key={index}>\n                  {index % 2 !== 0 && <div className=\"vr\"></div>}\n                  <CCol>\n                    <div className=\"fs-5 fw-semibold\">{value.value}</div>\n                    <div className=\"text-uppercase text-body-secondary small\">{value.title}</div>\n                  </CCol>\n                </React.Fragment>\n              )\n            })}\n        </CCardBody>\n      </CCard>\n    )\n  },\n)\n\nCWidgetStatsD.propTypes = {\n  chart: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  color: colorPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  values: PropTypes.arrayOf(PropTypes.any),\n}\n\nCWidgetStatsD.displayName = 'CWidgetStatsD'\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getStyle = (property: string, element?: Element) => {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const _element = element ?? document.body\n\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\n}\n\nexport default getStyle\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["MainChart","chartRef","useRef","useEffect","document","documentElement","addEventListener","current","setTimeout","options","scales","x","grid","borderColor","getStyle","color","ticks","y","update","random","Math","round","_jsx","_Fragment","children","CChartLine","ref","style","height","marginTop","data","labels","datasets","label","backgroundColor","concat","pointHoverBackgroundColor","borderWidth","fill","borderDash","maintainAspectRatio","plugins","legend","display","drawOnChartArea","beginAtZero","border","max","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","Dashboard","_jsxs","WidgetsDropdown","className","CCard","CCardBody","CRow","CCol","sm","id","CButton","CIcon","icon","cilCloudDownload","CButtonGroup","map","value","active","CCardFooter","xs","cols","gutter","lg","xl","title","percent","item","index","items","classNames","length","CProgress","thin","WidgetsBrand","withCharts","props","chartOptions","xxl","CWidgetStatsD","chart","CChart","type","cibFacebook","values","cibTwitter","cibLinkedin","cilCalendar","widgetChartRef1","widgetChartRef2","pointBackgroundColor","CWidgetStatsA","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","drawBorder","min","cilArrowTop","CChartBar","barPercentage","drawTicks","forwardRef","_a","size","vertical","rest","__rest","React","__assign","_b","propTypes","PropTypes","displayName","progressBarClassName","white","stacked","useContext","CProgressStackedContext","undefined","role","width","toArray","some","child","CProgressBar","animated","_c","variant","colorPropType","createContext","CProgressStacked","Provider","CCardHeader","key","property","element","window","_element","body","getComputedStyle","getPropertyValue","replace","hasOwn","hasOwnProperty","classes","i","arguments","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","call","newClass","module","exports","default"],"sourceRoot":""}