{"version":3,"file":"static/js/4328.b8beca5f.chunk.js","mappings":"iMAIA,MAAMA,EAAaC,IAAA,IAAC,KAAEC,EAAI,KAAEC,EAAI,YAAEC,GAAaH,EAAA,OAC7CI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASJ,IAAc,OAAGK,EAAAA,EAAAA,KAAA,MAAAD,SAAKH,KAC/BI,EAAAA,EAAAA,KAAA,KAAAD,SAAIF,MACA,EAkDR,EA/CoBI,KAmChBD,EAAAA,EAAAA,KAAA,OAAAD,SAlCW,CACX,CACEJ,KAAM,qBACNC,KAAM,qBACNC,YAAa,8DAEf,CACEF,KAAM,WACNC,KAAM,qBACNC,YAAa,+EAEf,CACEF,KAAM,cACNC,KAAM,qBACNC,YAAa,2EAEf,CACEF,KAAM,iBACNC,KAAM,qBACNC,YAAa,yFAEf,CACEF,KAAM,oBACNC,KAAM,uCACNC,YAAa,uEAEf,CACEF,KAAM,eACNC,KAAM,mBACNC,YAAa,sBAMPK,KAAI,CAACC,EAAQC,KACjBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAAaC,UAAU,OAAMP,UACjCC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRC,EAAAA,EAAAA,KAACP,EAAU,IAAKU,OAFRC,M,uGCfPC,GAAQG,EAAAA,EAAAA,aACnB,SAACC,EAAiEC,G,MAA/DX,EAAQU,EAAAV,SAAEO,EAASG,EAAAH,UAAEK,EAAKF,EAAAE,MAAEC,EAAWH,EAAAG,YAAEC,EAASJ,EAAAI,UAAKC,GAAIC,EAAAA,EAAAA,IAAAN,EAA7D,4DACC,OACEO,EAAAA,cACE,OAAAC,EAAAA,EAAAA,IAAA,CAAAX,WAAWY,EAAAA,EAAAA,GACT,QAAMC,EAAA,GAEJA,EAAC,MAAMC,OAAAT,IAAUA,EACjBQ,EAAC,QAAQC,OAAAP,IAAcA,EACvBM,EAAC,WAAWC,OAAAR,IAAgBA,EAAW,GAEzCN,IAEEQ,EACJ,CAAAJ,IAAKA,IAEJX,EAGP,IAGFM,EAAMgB,UAAY,CAChBtB,SAAUuB,IAAAA,KACVhB,UAAWgB,IAAAA,OACXX,MAAOY,EAAAA,GACPX,YAAaW,EAAAA,GACbV,UAAWS,IAAAA,QAGbjB,EAAMmB,YAAc,O,4FCpDPjB,GAAYC,EAAAA,EAAAA,aACvB,SAACC,EAAkCC,GAAhC,IAAAX,EAAQU,EAAAV,SAAEO,EAASG,EAAAH,UAAKQ,GAA1BC,EAAAA,EAAAA,IAAAN,EAAA,0BACC,OACEO,EAAAA,cAAA,OAAAC,EAAAA,EAAAA,IAAA,CAAKX,WAAWY,EAAAA,EAAAA,GAAW,YAAaZ,IAAgBQ,EAAI,CAAEJ,IAAKA,IAChEX,EAGP,IAGFQ,EAAUc,UAAY,CACpBtB,SAAUuB,IAAAA,KACVhB,UAAWgB,IAAAA,QAGbf,EAAUiB,YAAc,W","sources":["views/AboutUs/teammembers/TeamMembers.js","../node_modules/@coreui/react/src/components/card/CCard.tsx","../node_modules/@coreui/react/src/components/card/CCardBody.tsx"],"sourcesContent":["import React from 'react';\nimport { CCard, CCardHeader, CCardBody } from '@coreui/react';\n\n// TeamMember component to display individual team member information\nconst TeamMember = ({ name, role, description }) => (\n  <div>\n    <strong>{name}</strong> - <em>{role}</em>\n    <p>{description}</p>\n  </div>\n);\n\nconst TeamMembers = () => {\n  const team = [\n    {\n      name: 'Christian Campbell',\n      role: 'Software Developer',\n      description: 'Oversees the back end functions to simplify the front end.',\n    },\n    {\n      name: 'Josh Lee',\n      role: 'Software Developer',\n      description: 'Leads the development team, designs architecture, and ensures code quality.',\n    },\n    {\n      name: 'Sam Schultz',\n      role: 'Software Developer',\n      description: 'Responsible for the user experience design and testing user interfaces.',\n    },\n    {\n      name: 'Grady Rowedder',\n      role: 'Software Developer',\n      description: 'Gets the job done whether there is a need in the server or client-side of operations.',\n    },\n    {\n      name: 'Myles Bunde Green',\n      role: 'System Adminstrator, Project Manager',\n      description: 'Oversees the project direction and ensures timelines are being met.',\n    },\n    {\n      name: 'Kyle Hoffman',\n      role: 'Field Validation',\n      description: 'Field Validation.',\n    },\n  ];\n\n  return (\n    <div>\n      {team.map((member, index) => (\n        <CCard key={index} className=\"mb-4\">\n          <CCardBody>\n            <TeamMember {...member} />\n          </CCardBody>\n        </CCard>\n      ))}\n    </div>\n  );\n};\n\nexport default TeamMembers;\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CCardProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Sets the text color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | 'primary-emphasis' | 'secondary-emphasis' | 'success-emphasis' | 'danger-emphasis' | 'warning-emphasis' | 'info-emphasis' | 'light-emphasis' | 'body' | 'body-emphasis' | 'body-secondary' | 'body-tertiary' | 'black' | 'black-50' | 'white' | 'white-50' | string\n   */\n  textColor?: string\n  /**\n   * Sets the component's color scheme to one of CoreUI's themed colors, ensuring the text color contrast adheres to the WCAG 4.5:1 contrast ratio standard for accessibility.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   * @since 5.0.0-rc.3\n   */\n  textBgColor?: Colors\n}\n\nexport const CCard = forwardRef<HTMLDivElement, CCardProps>(\n  ({ children, className, color, textBgColor, textColor, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'card',\n          {\n            [`bg-${color}`]: color,\n            [`text-${textColor}`]: textColor,\n            [`text-bg-${textBgColor}`]: textBgColor,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  textBgColor: colorPropType,\n  textColor: PropTypes.string,\n}\n\nCCard.displayName = 'CCard'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCardBodyProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardBody = forwardRef<HTMLDivElement, CCardBodyProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-body', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardBody.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardBody.displayName = 'CCardBody'\n"],"names":["TeamMember","_ref","name","role","description","_jsxs","children","_jsx","TeamMembers","map","member","index","CCard","className","CCardBody","forwardRef","_a","ref","color","textBgColor","textColor","rest","__rest","React","__assign","classNames","_b","concat","propTypes","PropTypes","colorPropType","displayName"],"sourceRoot":""}